// Generated by Dagger (https://dagger.dev).
package work.sample.data.dataSource;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import work.sample.data.service.AuthService;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AuthNetworkDataSource_Factory implements Factory<AuthNetworkDataSource> {
  private final Provider<AuthService> authServiceProvider;

  public AuthNetworkDataSource_Factory(Provider<AuthService> authServiceProvider) {
    this.authServiceProvider = authServiceProvider;
  }

  @Override
  public AuthNetworkDataSource get() {
    return newInstance(authServiceProvider.get());
  }

  public static AuthNetworkDataSource_Factory create(Provider<AuthService> authServiceProvider) {
    return new AuthNetworkDataSource_Factory(authServiceProvider);
  }

  public static AuthNetworkDataSource newInstance(AuthService authService) {
    return new AuthNetworkDataSource(authService);
  }
}
