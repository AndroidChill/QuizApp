// Generated by view binder compiler. Do not edit!
package work.sample.auth.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import work.sample.auth.R;

public final class FragmentPhoneBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnSetPhone;

  @NonNull
  public final EditText etNumber;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView textView;

  private FragmentPhoneBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnSetPhone, @NonNull EditText etNumber, @NonNull ImageView ivBack,
      @NonNull LinearLayout linearLayout, @NonNull TextView textView) {
    this.rootView = rootView;
    this.btnSetPhone = btnSetPhone;
    this.etNumber = etNumber;
    this.ivBack = ivBack;
    this.linearLayout = linearLayout;
    this.textView = textView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPhoneBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPhoneBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_phone, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPhoneBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_set_phone;
      MaterialButton btnSetPhone = ViewBindings.findChildViewById(rootView, id);
      if (btnSetPhone == null) {
        break missingId;
      }

      id = R.id.et_number;
      EditText etNumber = ViewBindings.findChildViewById(rootView, id);
      if (etNumber == null) {
        break missingId;
      }

      id = R.id.iv_back;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      return new FragmentPhoneBinding((ConstraintLayout) rootView, btnSetPhone, etNumber, ivBack,
          linearLayout, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
